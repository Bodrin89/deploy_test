name: Build and deploy workflow
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
        - name: clone code
          uses: actions/checkout@v2
        - name: docker build
          run: docker buildx build --platform linux/amd64 -t vladimirbodrin/test1:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
        - name: docker login
          run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        - name: docker push
          run: docker push vladimirbodrin/test1:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    runs-on: ubuntu-latest
    steps:
      - name: clone code
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render configs
        run: |
          mkdir deploy
          mkdir deploy/data
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
          cat user.db | envsubst > deploy/data/user.db

      - name: copy file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: "deploy/docker-compose.yaml, deploy/data/user.db"
          target: "flask_app_ci"
          strip_components: 1
      - name: deploy_app
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd flask_app_ci
            echo ${{ secrets.PASSWORD }} | sudo -S docker-compose up -d


